<<<<<<< HEAD
[{"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\index.js":"1","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\reportWebVitals.js":"2","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\App.js":"3","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\blog\\Blogs.jsx":"4","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\create-space\\CreateSpace.jsx":"5","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\addblog\\AddBlog.jsx":"6","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\Editor\\Editor.jsx":"7","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\home\\Home.jsx":"8","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\forums\\Forums.jsx":"9","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\questionlist\\NewQuestionList.jsx":"10","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\apollo.js":"11","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\navbar\\Navbar.jsx":"12","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\bloglist\\BlogList.jsx":"13","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\middlepart\\MiddlePart.jsx":"14","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\blogcard\\Blogcard.jsx":"15","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\login\\LoginButton.jsx":"16","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\videoCall\\VideoCall.jsx":"17","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\videoCall\\Video.js":"18","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\profile\\Profile.jsx":"19","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\Leaderboard\\myLeaderboard.jsx":"20"},{"size":996,"mtime":1690718974821,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1690693173379,"results":"23","hashOfConfig":"22"},{"size":1249,"mtime":1690720040699,"results":"24","hashOfConfig":"22"},{"size":617,"mtime":1690693173386,"results":"25","hashOfConfig":"22"},{"size":3528,"mtime":1690718974827,"results":"26","hashOfConfig":"22"},{"size":1775,"mtime":1690693173384,"results":"27","hashOfConfig":"22"},{"size":2830,"mtime":1690718974823,"results":"28","hashOfConfig":"22"},{"size":354,"mtime":1690693173401,"results":"29","hashOfConfig":"22"},{"size":534,"mtime":1690693173390,"results":"30","hashOfConfig":"22"},{"size":5175,"mtime":1690718974797,"results":"31","hashOfConfig":"22"},{"size":742,"mtime":1690693171053,"results":"32","hashOfConfig":"22"},{"size":1959,"mtime":1690718974795,"results":"33","hashOfConfig":"22"},{"size":741,"mtime":1690693173362,"results":"34","hashOfConfig":"22"},{"size":2568,"mtime":1690719735706,"results":"35","hashOfConfig":"22"},{"size":258,"mtime":1690693173361,"results":"36","hashOfConfig":"22"},{"size":355,"mtime":1690718974792,"results":"37","hashOfConfig":"22"},{"size":13275,"mtime":1690718421494,"results":"38","hashOfConfig":"22"},{"size":390,"mtime":1690711470914,"results":"39","hashOfConfig":"22"},{"size":1570,"mtime":1690718974828,"results":"40","hashOfConfig":"22"},{"size":1087,"mtime":1690718974826,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"10fq6t",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"46"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\index.js",["109"],[],"// index.js\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Create the root element for React rendering\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n    domain=\"reactconnect.us.auth0.com\"\r\n    clientId=\"d4wP9LVwVJbjnik3qewFaKHplb2CMKpk\"\r\n    authorizationParams={{\r\n      redirect_uri: window.location.origin\r\n    }}\r\n  >\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </Auth0Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();",[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\reportWebVitals.js",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\App.js",["110"],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\blog\\Blogs.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\create-space\\CreateSpace.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\addblog\\AddBlog.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\Editor\\Editor.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\home\\Home.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\forums\\Forums.jsx",[],[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\questionlist\\NewQuestionList.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\apollo.js",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\navbar\\Navbar.jsx",["111"],[],"import React from 'react'\r\nimport './navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <nav className=\"navbar navbar-expand-lg\" id=\"navbar\">\r\n          {/* <nav className=\"navbar\" id=\"navbar\"> */}\r\n          {/* <div className=\"container-fluid\"> */}\r\n          <Link className=\"navbar-brand\" to=\"/\">ReactConnect</Link>\r\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button> */}\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/leaderboard\">Leaderboard</Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/blogs\" className=\"nav-link\">Blogs</Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/forums\" className=\"nav-link\">Forums</Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to='/create-space'><button className=\"createSpaceBtn\" >Create Space</button>\r\n                </Link>\r\n              </li>\r\n\r\n              <div className=\"spacer\"></div>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/profile\">\r\n                  <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/20625/avatar-bg.png\" height=\"30px\" width=\"30px\" classNameName='myProfile' />\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n\r\n          </div>\r\n\r\n          {/* </div> */}\r\n        </nav>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\bloglist\\BlogList.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\middlepart\\MiddlePart.jsx",["112","113","114","115","116","117","118","119","120"],[],"import React, { useEffect, useState } from 'react';\r\nimport './middlepart.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport LoginButton from '../login/LoginButton';\r\n\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport client from '../../apollo';\r\nimport QuestionList from '../questionlist/NewQuestionList';\r\n\r\nconst MiddlePart = () => {\r\n  const { isLoading, isAuthenticated, error, user, loginWithRedirect, logout } = useAuth0();\r\n\r\n  \r\n\r\n  const [colors, setColors] = useState({ color1: '', color2: '', color3: '' });\r\n\r\n  useEffect(() => {\r\n    generateRandomColors();\r\n  }, []);\r\n\r\n  const getRandomColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const generateRandomColors = async () => {\r\n\r\n    setColors({\r\n      color1: getRandomColor(),\r\n      color2: getRandomColor(),\r\n      color3: getRandomColor(),\r\n    });\r\n     \r\n    // console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"middlePart\">\r\n        <center>\r\n          <h2 className='homeHeadingText'>Welcome to ReactConnect!👋🏻</h2>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div className=\"detailsContainer\">\r\n            <h3 className='paraText'>\"ReactConnect\" is a cutting-edge collaborative real-time code editor that revolutionizes the way developers work together on coding projects. Inspired by the fluidity of Google Docs, this platform empowers multiple developers to connect to the same React codebase simultaneously, enabling seamless collaboration and instant feedback like never before.</h3>\r\n            <img src=\"https://images.unsplash.com/photo-1556761175-b413da4baf72?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80\" alt=\"ReactConnect\" className='devImage' />\r\n          </div>\r\n          <br /><br />\r\n          <button\r\n            className=\"gradient-button glow-animation\"\r\n            style={{\r\n              '--color1': colors.color1,\r\n              '--color2': colors.color2,\r\n              '--color3': colors.color3,\r\n            }}\r\n            onClick={generateRandomColors}\r\n          >\r\n            Let's get started 🔥\r\n          </button>\r\n\r\n          <br/>\r\n          <br/>\r\n{isAuthenticated? <></> : <><button onClick={() => loginWithRedirect()} className='loginBtn'>Log In</button></>}\r\n\r\n \r\n        </center>\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MiddlePart;","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\blogcard\\Blogcard.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\login\\LoginButton.jsx",[],[],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\videoCall\\VideoCall.jsx",["121"],["122"],"import React, { createRef, useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Peer from \"simple-peer\";\r\nimport \"./video.css\";\r\nimport Video from './Video';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst VideoCall = () => {\r\n  const [peers, setPeers] = useState([]); //state for rendering and also have stream of peers\r\n  const socketRef = useRef(); //own socket\r\n  const userVideo = useRef(); //for display own video\r\n  const webcamStream = useRef(); //own webcam stream\r\n  const messageRef = createRef(); //message input\r\n  const peersRef = useRef([]); //collection of peers who are currently connect to a room\r\n  const screenCaptureStream = useRef(); //screen capture stream\r\n  const roomId = \"video\"; //joined room id\r\n  const [isVideoMuted, setIsVideoMuted] = useState(false);\r\n  const [isAudioMuted, setIsAudioMuted] = useState(false);\r\n  const [messages, setMessages] = useState([]); //all messages state after joining the room\r\n  const navigate = useNavigate();\r\n\r\n  const { user } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    connectToSocketAndWebcamStream().then(() => {\r\n      socketRef.current.emit(\"joinRoom\", roomId); //sending to the server that a user joined to a room\r\n\r\n      //server send array of socket id's of other user of same room so that new user can connect with other user via\r\n      //simple-peer for video transmission and message will be served using socket io\r\n      socketRef.current.on(\"usersInRoom\", users => { //triggered in server and here receiving it\r\n        const peers = [];\r\n        users.forEach(otherUserSocketId => {\r\n          //creating connection between two user via simple-peer for video\r\n          const peer = createPeer(otherUserSocketId, socketRef.current.id, webcamStream.current);\r\n          peersRef.current.push({\r\n            peerId: otherUserSocketId,\r\n            peer\r\n          });\r\n          peers.push({\r\n            peerId: otherUserSocketId,\r\n            peer\r\n          });\r\n        })\r\n        setPeers(peers);\r\n      })\r\n\r\n      //a new user joined at same room send signal,callerId(simple-peer) and stream to server and server give it to\r\n      //us to create peer between two peer and connect\r\n      socketRef.current.on(\"userJoined\", payload => {\r\n        let peer;\r\n        if (screenCaptureStream.current) peer = addPeer(payload.signal, payload.callerId, screenCaptureStream.current);\r\n        else peer = addPeer(payload.signal, payload.callerId, webcamStream.current);\r\n        peersRef.current.push({\r\n          peerId: payload.callerId,\r\n          peer\r\n        });\r\n        const peerObj = {\r\n          peer,\r\n          peerId: payload.callerId\r\n        };\r\n\r\n        setPeers(users => [...users, peerObj]);\r\n      });\r\n\r\n      //receiving signal of other peer who is trying to connect and adding its signal at peersRef\r\n      socketRef.current.on(\"takingReturnedSignal\", payload => {\r\n        const item = peersRef.current.find(p => p.peerId === payload.id);\r\n        item.peer.signal(payload.signal);\r\n      });\r\n\r\n      //receiving message of an user and adding this at message state\r\n      socketRef.current.on('receiveMessage', payload => {\r\n        setMessages(messages => [...messages, payload]);\r\n      });\r\n\r\n      //user left and server send its peerId to disconnect from that peer\r\n      socketRef.current.on('userLeft', id => {\r\n        const peerObj = peersRef.current.find(p => p.peerId === id);\r\n        if (peerObj) peerObj.peer.destroy(); //cancel connection with disconnected peer\r\n        const peers = peersRef.current.filter(p => p.peerId !== id);\r\n        peersRef.current = peers;\r\n        setPeers(peers);\r\n      });\r\n    });\r\n\r\n    return () => stopAllVideoAudioMedia();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const connectToSocketAndWebcamStream = async () => {\r\n    //connecting to server using socket\r\n    socketRef.current = io.connect(\"http://localhost:3002\", {\r\n      // query: {\r\n      //   token: localStorage.getItem('Token')\r\n      // }\r\n    });\r\n    webcamStream.current = await getWebcamStream();\r\n    userVideo.current.srcObject = webcamStream.current;\r\n    if (!webcamStream.current.getAudioTracks()[0].enabled) webcamStream.current.getAudioTracks()[0].enabled = true;\r\n  }\r\n\r\n  //taking video(webcam) and audio of device\r\n  const getWebcamStream = async () => {\r\n    return await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n  }\r\n\r\n  function createPeer(userIdToSendSignal, callerId, stream) {\r\n    //if initiator is true then newly created peer will send a signal to other peer it those two peers accept signal\r\n    // then connection will be established between those two peers\r\n    //trickle for enable/disable trickle ICE candidates\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      // config: {\r\n      //   iceServers: [\r\n      //     // {\r\n      //     //   urls: process.env.REACT_APP_GOOGLE_STUN_SERVER\r\n      //     // },\r\n      //     // {\r\n      //     //   urls: process.env.REACT_APP_TURN_SERVER1_NAME,\r\n      //     //   username: process.env.REACT_APP_TURN_SERVER1_USERNAME,\r\n      //     //   credential: process.env.REACT_APP_TURN_SERVER1_PASSWORD\r\n      //     // },\r\n      //     // {\r\n      //     //   urls: process.env.REACT_APP_TURN_SERVER2_NAME,\r\n      //     //   username: process.env.REACT_APP_TURN_SERVER2_USERNAME,\r\n      //     //   credential: process.env.REACT_APP_TURN_SERVER2_PASSWORD\r\n      //     // }\r\n      //     {\r\n      //       urls: \"stun:stun.l.google.com:19302\",\r\n      //     }\r\n      //   ]\r\n      // },\r\n      stream //My own stream of video and audio\r\n    });\r\n\r\n    //sending signal to second peer and if that receive than other(second) peer also will send an signal to this peer\r\n    peer.on(\"signal\", signal => {\r\n      socketRef.current.emit(\"sendingSignal\", { userIdToSendSignal: userIdToSendSignal, callerId: callerId, signal });\r\n    })\r\n    return peer;\r\n  }\r\n\r\n  //after receiving of others user's signal adding to peer array and returning own signal to other user\r\n  function addPeer(incomingSignal, callerId, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream\r\n    });\r\n\r\n    //other peer give its signal in signal object and this peer returning its own signal\r\n    peer.on(\"signal\", signal => {\r\n      socketRef.current.emit(\"returningSignal\", { signal, callerId: callerId });\r\n    });\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  }\r\n\r\n  const shareScreen = async () => {\r\n    //getting screen video\r\n    screenCaptureStream.current = await navigator.mediaDevices.getDisplayMedia({ cursor: true });\r\n    //taking video track of stream\r\n    const screenCaptureVideoStreamTrack = screenCaptureStream.current.getVideoTracks()[0];\r\n\r\n    //replacing video track of each peer connected with getDisplayMedia video track and audio will remain as it is\r\n    //as all browser does not return audio track with getDisplayMedia\r\n    peers.map(peer => (\r\n      peer.peer.replaceTrack(\r\n        peer.peer.streams[0].getVideoTracks()[0],\r\n        screenCaptureVideoStreamTrack,\r\n        peer.peer.streams[0]\r\n      )\r\n    ))\r\n    //destroying previous stream video track\r\n    const previousWebcamStream = userVideo.current.srcObject;\r\n    const previousWebcamStreamTracks = previousWebcamStream.getTracks();\r\n    previousWebcamStreamTracks.forEach(function (track) {\r\n      if (track.kind === 'video') track.stop();\r\n    });\r\n    userVideo.current.srcObject = screenCaptureStream.current;\r\n\r\n    //When user will stop share then own video(of webcam) will appears\r\n    screenCaptureStream.current.getVideoTracks()[0].addEventListener('ended', () => {\r\n      startWebCamVideo();\r\n      setIsAudioMuted(false);\r\n      setIsVideoMuted(false);\r\n    });\r\n  }\r\n\r\n  //Stopping webcam and screen media and audio also\r\n  const stopAllVideoAudioMedia = async () => {\r\n    //destroying previous stream(webcam stream)\r\n    const previousWebcamStream = webcamStream.current;\r\n    const previousWebcamStreamTracks = previousWebcamStream.getTracks();\r\n    previousWebcamStreamTracks.forEach(track => {\r\n      track.stop();\r\n    });\r\n\r\n    //destroying previous stream(screen capture stream)\r\n    const previousScreenCaptureStream = screenCaptureStream.current;\r\n    if (previousScreenCaptureStream) {\r\n      const previousScreenCaptureStreamTracks = previousScreenCaptureStream.getTracks();\r\n      previousScreenCaptureStreamTracks.forEach(track => {\r\n        track.stop();\r\n      });\r\n    }\r\n  }\r\n\r\n  const startWebCamVideo = async () => {\r\n    await stopAllVideoAudioMedia();\r\n\r\n    const newWebcamStream = await getWebcamStream(); //getting webcam video and audio\r\n    const videoStreamTrack = newWebcamStream.getVideoTracks()[0]; //taking video track of stream\r\n    const audioStreamTrack = newWebcamStream.getAudioTracks()[0]; //taking audio track of stream\r\n    //replacing all video track of all peer connected to this peer\r\n    peers.map(peer => {\r\n      //replacing video track\r\n      peer.peer.replaceTrack(\r\n        peer.peer.streams[0].getVideoTracks()[0],\r\n        videoStreamTrack,\r\n        peer.peer.streams[0]\r\n      );\r\n      //replacing audio track\r\n      peer.peer.replaceTrack(\r\n        peer.peer.streams[0].getAudioTracks()[0],\r\n        audioStreamTrack,\r\n        peer.peer.streams[0]\r\n      );\r\n    });\r\n    userVideo.current.srcObject = newWebcamStream;\r\n    webcamStream.current = newWebcamStream;\r\n    screenCaptureStream.current = null;\r\n  }\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    //sending message text with roomId to sever it will send message along other data to all connected user of current room\r\n    if (socketRef.current) {\r\n      socketRef.current.emit('sendMessage', {\r\n        roomId,\r\n        message: messageRef.current.value,\r\n        name: user.name,\r\n        username: user.nickname,\r\n      })\r\n      messageRef.current.value = \"\";\r\n    }\r\n  }\r\n\r\n  //Mute or unmute audio\r\n  const muteOrUnmuteAudio = () => {\r\n    if (!isAudioMuted) {\r\n      webcamStream.current.getAudioTracks()[0].enabled = false;\r\n      setIsAudioMuted(true);\r\n    } else {\r\n      webcamStream.current.getAudioTracks()[0].enabled = true;\r\n      setIsAudioMuted(false);\r\n    }\r\n  }\r\n\r\n  //stop or play video\r\n  const playOrStopVideo = () => {\r\n    if (!isVideoMuted) {\r\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\r\n      setIsVideoMuted(true);\r\n    } else {\r\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\r\n      setIsVideoMuted(false);\r\n    }\r\n  }\r\n\r\n  const leaveMeeting = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"room row\">\r\n        <div className=\"videos col s10 p0\">\r\n          <div className=\"videos__users-video\">\r\n            <div id=\"video-grid\">\r\n              <video muted ref={userVideo} autoPlay playsInline />\r\n              {peers.map((peer) => (\r\n                <Video controls key={peer.peerId} peer={peer} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"videos__controls\">\r\n            <div className=\"control\">\r\n              <div onClick={muteOrUnmuteAudio} className=\"control__btn-container\">\r\n                {isAudioMuted\r\n                  ? <i className=\"unmute fas fa-microphone-slash\" />\r\n                  : <i className=\"fas fa-microphone\" />\r\n                }\r\n                {isAudioMuted\r\n                  ? <span>Unmute</span>\r\n                  : <span>Mute</span>\r\n                }\r\n              </div>\r\n              <div onClick={playOrStopVideo} className=\"control__btn-container\">\r\n                {isVideoMuted\r\n                  ? <i className=\"stop fas fa-video-slash\" />\r\n                  : <i className=\"fas fa-video\" />\r\n                }\r\n                {isVideoMuted\r\n                  ? <span>Play Video</span>\r\n                  : <span>Stop Video</span>\r\n                }\r\n              </div>\r\n            </div>\r\n            <div onClick={shareScreen} className=\"control\">\r\n              <div className=\"control__btn-container\">\r\n                <i className=\"fas fa-shield-alt\" />\r\n                <span>Share Screen</span>\r\n              </div>\r\n            </div>\r\n            <div onClick={leaveMeeting} className=\"control\">\r\n              <div className=\"control__btn-container\">\r\n                <span className=\"leave_meeting\">Leave Meeting</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"chat col s2 p0\">\r\n          <div className=\"chat__header\">\r\n            <h6>Chat</h6>\r\n          </div>\r\n          <div className=\"chat__msg-container\">\r\n            <ul className=\"messages\">\r\n              {messages.map((message, index) => (\r\n                <p key={index}>{message.name}({message.username}):{message.message}</p>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <form onSubmit={sendMessage} className=\"chat__msg-send-container\">\r\n            <input ref={messageRef} type=\"text\" placeholder=\"Type message here...\" />\r\n            <i onClick={sendMessage} className=\"fa fa-paper-plane\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\components\\videoCall\\Video.js",[],["123"],"C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\profile\\Profile.jsx",["124","125"],[],"import React, { useEffect } from 'react';\r\nimport './profile.css'; // Import the CSS file for styling\r\nimport NavBar from '../../components/navbar/Navbar';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst UserProfile = () => {\r\n  const { isLoading, isAuthenticated, error, user, loginWithRedirect, logout } = useAuth0();\r\n\r\n  // If you want to perform any additional actions on component mount, you can use useEffect\r\n  useEffect(() => {\r\n    // Your additional logic here, if needed\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // Show a loading indicator while waiting for Auth0 to load user data\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    loginWithRedirect(); // Redirect to login page if the user is not authenticated\r\n    return null; // You can return null or any other UI element to show while redirecting\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <br />\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-header\">\r\n          <img src={user.picture} alt=\"Profile\" className=\"profile-image\" />\r\n          <br />\r\n          <h1 className=\"profile-name\">{user.name}</h1>\r\n          <p className=\"profile-email\">{user.email}</p>\r\n        </div>\r\n\r\n        <div className=\"profile-details\">\r\n          <p className=\"sessions-attended\">Sessions Attended: 12</p>\r\n          <p className=\"num-of-badges\">Number of Badges: 12</p>\r\n          <br />\r\n          <p className=\"title\">The Merge Master</p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\Adarsh\\MyPrograms\\reactconnect\\reactconnect\\src\\screens\\Leaderboard\\myLeaderboard.jsx",[],[],{"ruleId":"126","severity":1,"message":"127","line":12,"column":7,"nodeType":"128","messageId":"129","endLine":12,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":13,"column":8,"nodeType":"128","messageId":"129","endLine":13,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":39,"column":19,"nodeType":"133","endLine":39,"endColumn":150},{"ruleId":"126","severity":1,"message":"134","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":19},{"ruleId":"126","severity":1,"message":"135","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":24},{"ruleId":"126","severity":1,"message":"136","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":14},{"ruleId":"126","severity":1,"message":"137","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":20},{"ruleId":"126","severity":1,"message":"138","line":11,"column":11,"nodeType":"128","messageId":"129","endLine":11,"endColumn":20},{"ruleId":"126","severity":1,"message":"139","line":11,"column":39,"nodeType":"128","messageId":"129","endLine":11,"endColumn":44},{"ruleId":"126","severity":1,"message":"140","line":11,"column":46,"nodeType":"128","messageId":"129","endLine":11,"endColumn":50},{"ruleId":"126","severity":1,"message":"141","line":11,"column":71,"nodeType":"128","messageId":"129","endLine":11,"endColumn":77},{"ruleId":"142","severity":1,"message":"143","line":19,"column":6,"nodeType":"144","endLine":19,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":218,"column":20,"nodeType":"148","messageId":"149","endLine":218,"endColumn":22},{"ruleId":"142","severity":1,"message":"150","line":89,"column":6,"nodeType":"144","endLine":89,"endColumn":8,"suggestions":"151","suppressions":"152"},{"ruleId":"142","severity":1,"message":"153","line":11,"column":8,"nodeType":"144","endLine":11,"endColumn":10,"suggestions":"154","suppressions":"155"},{"ruleId":"126","severity":1,"message":"139","line":7,"column":39,"nodeType":"128","messageId":"129","endLine":7,"endColumn":44},{"ruleId":"126","severity":1,"message":"141","line":7,"column":71,"nodeType":"128","messageId":"129","endLine":7,"endColumn":77},"no-unused-vars","'rootElement' is assigned a value but never used.","Identifier","unusedVar","'VideoCall' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LoginButton' is defined but never used.","'ApolloProvider' is defined but never used.","'client' is defined but never used.","'QuestionList' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateRandomColors'. Either include it or remove the dependency array.","ArrayExpression",["156"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'connectToSocketAndWebcamStream'. Either include it or remove the dependency array.",["157"],["158"],"React Hook useEffect has a missing dependency: 'props.peer.peer'. Either include it or remove the dependency array.",["159"],["160"],{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"kind":"165","justification":"166"},{"desc":"167","fix":"168"},{"kind":"165","justification":"166"},"Update the dependencies array to be: [generateRandomColors]",{"range":"169","text":"170"},"Update the dependencies array to be: [connectToSocketAndWebcamStream]",{"range":"171","text":"172"},"directive","","Update the dependencies array to be: [props.peer.peer]",{"range":"173","text":"174"},[597,599],"[generateRandomColors]",[3807,3809],"[connectToSocketAndWebcamStream]",[284,286],"[props.peer.peer]"]
=======
[{"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\index.js":"1","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\reportWebVitals.js":"2","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\App.js":"3","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\home\\Home.jsx":"4","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\forums\\Forums.jsx":"5","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\blog\\Blogs.jsx":"6","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\addblog\\AddBlog.jsx":"7","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Editor\\Editor.jsx":"8","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\create-space\\CreateSpace.jsx":"9","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\questionlist\\NewQuestionList.jsx":"10","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\apollo.js":"11","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\navbar\\Navbar.jsx":"12","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\bloglist\\BlogList.jsx":"13","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\middlepart\\MiddlePart.jsx":"14","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\blogcard\\Blogcard.jsx":"15","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\login\\LoginButton.jsx":"16","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\profile\\Profile.jsx":"17","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Leaderboard\\myLeaderboard.jsx":"18","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\SplitContainer.jsx":"19","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\Files.jsx":"20"},{"size":996,"mtime":1690700874193,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1690687668143,"results":"23","hashOfConfig":"22"},{"size":1318,"mtime":1690715474979,"results":"24","hashOfConfig":"22"},{"size":354,"mtime":1690687668154,"results":"25","hashOfConfig":"22"},{"size":534,"mtime":1690687668153,"results":"26","hashOfConfig":"22"},{"size":617,"mtime":1690687668148,"results":"27","hashOfConfig":"22"},{"size":1775,"mtime":1690687668146,"results":"28","hashOfConfig":"22"},{"size":2844,"mtime":1690717822905,"results":"29","hashOfConfig":"22"},{"size":3528,"mtime":1690698860779,"results":"30","hashOfConfig":"22"},{"size":5175,"mtime":1690698114895,"results":"31","hashOfConfig":"22"},{"size":742,"mtime":1690687666567,"results":"32","hashOfConfig":"22"},{"size":1959,"mtime":1690701408657,"results":"33","hashOfConfig":"22"},{"size":741,"mtime":1690687668133,"results":"34","hashOfConfig":"22"},{"size":2388,"mtime":1690718600509,"results":"35","hashOfConfig":"22"},{"size":258,"mtime":1690687668130,"results":"36","hashOfConfig":"22"},{"size":355,"mtime":1690697373430,"results":"37","hashOfConfig":"22"},{"size":3163,"mtime":1690720138687,"results":"38","hashOfConfig":"22"},{"size":1087,"mtime":1690701433380,"results":"39","hashOfConfig":"22"},{"size":4885,"mtime":1690719546359,"results":"40","hashOfConfig":"22"},{"size":3755,"mtime":1690718747263,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"iyu57u",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\index.js",["107"],[],"// index.js\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Create the root element for React rendering\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n    domain=\"reactconnect.us.auth0.com\"\r\n    clientId=\"d4wP9LVwVJbjnik3qewFaKHplb2CMKpk\"\r\n    authorizationParams={{\r\n      redirect_uri: window.location.origin\r\n    }}\r\n  >\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </Auth0Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();",[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\reportWebVitals.js",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\App.js",["108"],[],"import { Routes, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Home from \"./screens/home/Home\";\r\nimport CreateSpace from \"./screens/create-space/CreateSpace\";\r\nimport Blogs from \"./screens/blog/Blogs\";\r\nimport AddBlog from \"./screens/addblog/AddBlog\";\r\nimport Forums from \"./screens/forums/Forums\";\r\nimport NewQuestionsList from \"./components/questionlist/NewQuestionList\";\r\nimport CodeEditor from './screens/Editor/Editor'\r\nimport Profile from \"./screens/profile/Profile\";\r\nimport Leaderboard from \"./screens/Leaderboard/myLeaderboard\";\r\nimport SplitContainer from \"./components/split_container/SplitContainer\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Routes>\r\n      <Route exact path=\"/\" element={<Home/>} />\r\n      <Route exact path=\"/create-space\" element={<CreateSpace/>} />\r\n      <Route exact path=\"/blogs\" element={<Blogs/>} />\r\n      <Route exact path=\"/add-blog\" element={<AddBlog/>} />\r\n      <Route exact path=\"/forums\" element={<NewQuestionsList/>} />\r\n      <Route exact path=\"/profile\" element={<Profile/>} />\r\n      <Route exact path=\"/leaderboard\" element={<Leaderboard/>} />\r\n      <Route exact path=\"/space/:token/editor\" element={<CodeEditor/>} />\r\n      <Route exact path=\"/editor\" element={<SplitContainer/>} />\r\n   </Routes>\r\n   </>  \r\n  );\r\n}\r\n\r\nexport default App;\r\n",[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\home\\Home.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\forums\\Forums.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\blog\\Blogs.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\addblog\\AddBlog.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Editor\\Editor.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\create-space\\CreateSpace.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\questionlist\\NewQuestionList.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\apollo.js",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\navbar\\Navbar.jsx",["109"],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\bloglist\\BlogList.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\middlepart\\MiddlePart.jsx",["110","111","112","113"],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\blogcard\\Blogcard.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\login\\LoginButton.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\profile\\Profile.jsx",["114","115"],[],"// UserProfile.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './profile.css'; // Import the CSS file for styling\r\nimport NavBar from '../../components/navbar/Navbar';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst ChallengesTile = () => {\r\n  // Sample challenges data\r\n  const [challenges, setChallenges] = useState([\r\n    { id: 1, title: 'Challenge 1', status: 'completed' },\r\n    { id: 2, title: 'Challenge 2', status: 'pending' },\r\n    { id: 3, title: 'Challenge 3', status: 'completed' },\r\n    { id: 4, title: 'Challenge 4', status: 'completed' },\r\n    { id: 5, title: 'Challenge 5', status: 'pending' },\r\n  ]);\r\n\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const completedChallenges = challenges.filter(challenge => challenge.status === 'completed');\r\n  const pendingChallenges = challenges.filter(challenge => challenge.status === 'pending');\r\n\r\n  const handleToggleExpand = () => {\r\n    setIsExpanded(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={`challenges-tile ${isExpanded ? 'expanded' : ''}`}>\r\n      <h2 onClick={handleToggleExpand}>Challenges</h2>\r\n      {isExpanded && (\r\n        <>\r\n          <div className=\"challenges-completed\">\r\n            <h3>Completed</h3>\r\n            <ul>\r\n              {completedChallenges.map(challenge => (\r\n                <li key={challenge.id}>{challenge.title}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"challenges-pending\">\r\n            <h3>Pending</h3>\r\n            <ul>\r\n              {pendingChallenges.map(challenge => (\r\n                <li key={challenge.id}>{challenge.title}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserProfile = () => {\r\n  const { isLoading, isAuthenticated, error, user, loginWithRedirect } = useAuth0();\r\n\r\n  // If you want to perform any additional actions on component mount, you can use useEffect\r\n  useEffect(() => {\r\n    // Your additional logic here, if needed\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // Show a loading indicator while waiting for Auth0 to load user data\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    loginWithRedirect(); // Redirect to login page if the user is not authenticated\r\n    return null; // You can return null or any other UI element to show while redirecting\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <NavBar />\r\n      <br />\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-header\">\r\n          <img src={user.picture} alt=\"Profile\" className=\"profile-image\" />\r\n          <br />\r\n          <h1 className=\"profile-name\">{user.name}</h1>\r\n          <p className=\"profile-email\">{user.email}</p>\r\n        </div>\r\n\r\n        <div className=\"profile-details\">\r\n          <p className=\"sessions-attended\">Sessions Attended: 12</p>\r\n          <p className=\"num-of-badges\">Number of Badges: 12</p>\r\n          <br />\r\n          <p className=\"title\">The Merge Master</p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <center>\r\n      <ChallengesTile />\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Leaderboard\\myLeaderboard.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\SplitContainer.jsx",["116","117"],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\Files.jsx",["118"],[],{"ruleId":"119","severity":1,"message":"120","line":12,"column":7,"nodeType":"121","messageId":"122","endLine":12,"endColumn":18},{"ruleId":"119","severity":1,"message":"123","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":39,"column":19,"nodeType":"126","endLine":39,"endColumn":150},{"ruleId":"119","severity":1,"message":"127","line":5,"column":11,"nodeType":"121","messageId":"122","endLine":5,"endColumn":20},{"ruleId":"119","severity":1,"message":"128","line":5,"column":39,"nodeType":"121","messageId":"122","endLine":5,"endColumn":44},{"ruleId":"119","severity":1,"message":"129","line":5,"column":71,"nodeType":"121","messageId":"122","endLine":5,"endColumn":77},{"ruleId":"130","severity":1,"message":"131","line":13,"column":6,"nodeType":"132","endLine":13,"endColumn":8,"suggestions":"133"},{"ruleId":"119","severity":1,"message":"134","line":10,"column":22,"nodeType":"121","messageId":"122","endLine":10,"endColumn":35},{"ruleId":"119","severity":1,"message":"128","line":55,"column":39,"nodeType":"121","messageId":"122","endLine":55,"endColumn":44},{"ruleId":"119","severity":1,"message":"135","line":33,"column":10,"nodeType":"121","messageId":"122","endLine":33,"endColumn":21},{"ruleId":"119","severity":1,"message":"136","line":33,"column":23,"nodeType":"121","messageId":"122","endLine":33,"endColumn":37},{"ruleId":"130","severity":1,"message":"137","line":44,"column":6,"nodeType":"132","endLine":44,"endColumn":8,"suggestions":"138"},"no-unused-vars","'rootElement' is assigned a value but never used.","Identifier","unusedVar","'Forums' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateRandomColors'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'setChallenges' is assigned a value but never used.","'fileContent' is assigned a value but never used.","'setFileContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFileContent'. Either include it or remove the dependency array.",["140"],{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [generateRandomColors]",{"range":"145","text":"146"},"Update the dependencies array to be: [fetchFileContent]",{"range":"147","text":"148"},[415,417],"[generateRandomColors]",[1446,1448],"[fetchFileContent]"]
>>>>>>> 457d8f1f0bf5ed99718f58d047b54ebc7265e9b6
