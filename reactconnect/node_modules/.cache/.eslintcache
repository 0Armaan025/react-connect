[{"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\index.js":"1","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\reportWebVitals.js":"2","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\App.js":"3","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\home\\Home.jsx":"4","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\forums\\Forums.jsx":"5","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\blog\\Blogs.jsx":"6","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\addblog\\AddBlog.jsx":"7","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Editor\\Editor.jsx":"8","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\create-space\\CreateSpace.jsx":"9","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\questionlist\\NewQuestionList.jsx":"10","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\apollo.js":"11","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\navbar\\Navbar.jsx":"12","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\bloglist\\BlogList.jsx":"13","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\middlepart\\MiddlePart.jsx":"14","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\blogcard\\Blogcard.jsx":"15","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\login\\LoginButton.jsx":"16","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\profile\\Profile.jsx":"17","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Leaderboard\\myLeaderboard.jsx":"18","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\SplitContainer.jsx":"19","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\Files.jsx":"20","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\videoCall\\VideoCall.jsx":"21","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\videoCall\\Video.js":"22"},{"size":996,"mtime":1690700874193,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1690687668143,"results":"25","hashOfConfig":"24"},{"size":1444,"mtime":1690720817297,"results":"26","hashOfConfig":"24"},{"size":354,"mtime":1690687668154,"results":"27","hashOfConfig":"24"},{"size":534,"mtime":1690687668153,"results":"28","hashOfConfig":"24"},{"size":617,"mtime":1690687668148,"results":"29","hashOfConfig":"24"},{"size":1775,"mtime":1690687668146,"results":"30","hashOfConfig":"24"},{"size":2844,"mtime":1690717822905,"results":"31","hashOfConfig":"24"},{"size":3528,"mtime":1690698860779,"results":"32","hashOfConfig":"24"},{"size":5175,"mtime":1690698114895,"results":"33","hashOfConfig":"24"},{"size":742,"mtime":1690687666567,"results":"34","hashOfConfig":"24"},{"size":1816,"mtime":1690721916455,"results":"35","hashOfConfig":"24"},{"size":741,"mtime":1690687668133,"results":"36","hashOfConfig":"24"},{"size":2386,"mtime":1690720612080,"results":"37","hashOfConfig":"24"},{"size":258,"mtime":1690687668130,"results":"38","hashOfConfig":"24"},{"size":355,"mtime":1690697373430,"results":"39","hashOfConfig":"24"},{"size":3163,"mtime":1690720138687,"results":"40","hashOfConfig":"24"},{"size":1087,"mtime":1690701433380,"results":"41","hashOfConfig":"24"},{"size":4885,"mtime":1690719546359,"results":"42","hashOfConfig":"24"},{"size":3755,"mtime":1690718747263,"results":"43","hashOfConfig":"24"},{"size":13275,"mtime":1690721585590,"results":"44","hashOfConfig":"24"},{"size":390,"mtime":1690720612082,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"iyu57u",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\index.js",["118"],[],"// index.js\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Create the root element for React rendering\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n    domain=\"reactconnect.us.auth0.com\"\r\n    clientId=\"d4wP9LVwVJbjnik3qewFaKHplb2CMKpk\"\r\n    authorizationParams={{\r\n      redirect_uri: window.location.origin\r\n    }}\r\n  >\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </Auth0Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();",[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\reportWebVitals.js",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\App.js",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\home\\Home.jsx",[],[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\forums\\Forums.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\blog\\Blogs.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\addblog\\AddBlog.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Editor\\Editor.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\create-space\\CreateSpace.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\questionlist\\NewQuestionList.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\apollo.js",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\navbar\\Navbar.jsx",["119"],[],"import React from 'react'\r\nimport './navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <nav className=\"navbar navbar-expand-lg\" id=\"navbar\">\r\n          {/* <nav className=\"navbar\" id=\"navbar\"> */}\r\n          {/* <div className=\"container-fluid\"> */}\r\n          <Link className=\"navbar-brand\" to=\"/\">ReactConnect</Link>\r\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button> */}\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/blogs\" className=\"nav-link\">Blogs</Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/forums\" className=\"nav-link\">Forums</Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to='/create-space'><button className=\"createSpaceBtn\" >Create Space</button>\r\n                </Link>\r\n              </li>\r\n\r\n              <div className=\"spacer\"></div>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/profile\">\r\n                  <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/20625/avatar-bg.png\" height=\"30px\" width=\"30px\" classNameName='myProfile' />\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n\r\n          </div>\r\n\r\n          {/* </div> */}\r\n        </nav>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\bloglist\\BlogList.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\middlepart\\MiddlePart.jsx",["120","121","122","123"],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\blogcard\\Blogcard.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\login\\LoginButton.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\profile\\Profile.jsx",["124","125"],[],"// UserProfile.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './profile.css'; // Import the CSS file for styling\r\nimport NavBar from '../../components/navbar/Navbar';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst ChallengesTile = () => {\r\n  // Sample challenges data\r\n  const [challenges, setChallenges] = useState([\r\n    { id: 1, title: 'Challenge 1', status: 'completed' },\r\n    { id: 2, title: 'Challenge 2', status: 'pending' },\r\n    { id: 3, title: 'Challenge 3', status: 'completed' },\r\n    { id: 4, title: 'Challenge 4', status: 'completed' },\r\n    { id: 5, title: 'Challenge 5', status: 'pending' },\r\n  ]);\r\n\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const completedChallenges = challenges.filter(challenge => challenge.status === 'completed');\r\n  const pendingChallenges = challenges.filter(challenge => challenge.status === 'pending');\r\n\r\n  const handleToggleExpand = () => {\r\n    setIsExpanded(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={`challenges-tile ${isExpanded ? 'expanded' : ''}`}>\r\n      <h2 onClick={handleToggleExpand}>Challenges</h2>\r\n      {isExpanded && (\r\n        <>\r\n          <div className=\"challenges-completed\">\r\n            <h3>Completed</h3>\r\n            <ul>\r\n              {completedChallenges.map(challenge => (\r\n                <li key={challenge.id}>{challenge.title}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"challenges-pending\">\r\n            <h3>Pending</h3>\r\n            <ul>\r\n              {pendingChallenges.map(challenge => (\r\n                <li key={challenge.id}>{challenge.title}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserProfile = () => {\r\n  const { isLoading, isAuthenticated, error, user, loginWithRedirect } = useAuth0();\r\n\r\n  // If you want to perform any additional actions on component mount, you can use useEffect\r\n  useEffect(() => {\r\n    // Your additional logic here, if needed\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // Show a loading indicator while waiting for Auth0 to load user data\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    loginWithRedirect(); // Redirect to login page if the user is not authenticated\r\n    return null; // You can return null or any other UI element to show while redirecting\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <NavBar />\r\n      <br />\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-header\">\r\n          <img src={user.picture} alt=\"Profile\" className=\"profile-image\" />\r\n          <br />\r\n          <h1 className=\"profile-name\">{user.name}</h1>\r\n          <p className=\"profile-email\">{user.email}</p>\r\n        </div>\r\n\r\n        <div className=\"profile-details\">\r\n          <p className=\"sessions-attended\">Sessions Attended: 12</p>\r\n          <p className=\"num-of-badges\">Number of Badges: 12</p>\r\n          <br />\r\n          <p className=\"title\">The Merge Master</p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <center>\r\n      <ChallengesTile />\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\screens\\Leaderboard\\myLeaderboard.jsx",[],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\SplitContainer.jsx",["126","127"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Split from \"react-split\";\r\nimport './splitcontainer.css';\r\nimport axios from \"axios\";\r\nimport CodeEditor from \"../../screens/Editor/Editor\";\r\nimport NavBar from \"../navbar/Navbar\";\r\n\r\nconst Files = ({ files, onFileClick }) => {\r\n  return (\r\n    <>\r\n    <NavBar/>\r\n    <div className=\"files\">\r\n      <h2>Files:</h2>\r\n      <ul>\r\n        {files.map((file, index) => (\r\n          <li\r\n            key={index}\r\n            onClick={() => (file.type === 'dir' ? onFileClick(file.path) : onFileClick(file.path))}\r\n            className={file.type === 'dir' ? 'folder' : ''}\r\n          >\r\n            {file.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SplitContainer = ({ isSidebarCollapsed }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n\r\n  const getFileContent = async (filePath) => {\r\n    const owner = 'bishalbera';\r\n    const repo = 'Parko';\r\n    const branch = 'master';\r\n    const accessToken = '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';\r\n\r\n    const url = `https://api.github.com/repos/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\r\n    const headers = {\r\n      'Authorization': `token ${accessToken}`,\r\n      'Accept': 'application/vnd.github.v3.raw', // Request raw content directly\r\n    };\r\n\r\n    try {\r\n      const response = await axios.get(url, { headers });\r\n\r\n      // 'data' will contain the content of the file\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n      throw new Error('Error fetching file content');\r\n    }\r\n  };\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const owner = 'bishalbera';\r\n      const repo = 'Parko';\r\n      const branch = 'master';\r\n      const accessToken = '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';\r\n      const url = `https://api.github.com/repos/${owner}/${repo}/contents?ref=${branch}`;\r\n      const headers = { 'Authorization': `token ${accessToken}` };\r\n      const response = await fetch(url, { headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error fetching file list');\r\n      }\r\n\r\n      const filesData = await response.json();\r\n      // Filter out files and folders separately\r\n      const files = filesData.filter(item => item.type === 'file');\r\n      const folders = filesData.filter(item => item.type === 'dir');\r\n      setFiles([...folders, ...files]); // Merge folders and files arrays\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileClick = async (filePath) => {\r\n    try {\r\n      if (files.find(file => file.path === filePath)?.type === 'dir') {\r\n        // If the clicked item is a folder, fetch its contents\r\n        const accessToken = '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';\r\n        const response = await axios.get(filePath, { headers: { 'Authorization': `token ${accessToken}` } });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error fetching folder contents');\r\n        }\r\n\r\n        const folderContents = await response.data;\r\n        // Filter out files and folders separately\r\n        const filesInFolder = folderContents.filter(item => item.type === 'file');\r\n        const foldersInFolder = folderContents.filter(item => item.type === 'dir');\r\n\r\n        // Combine the current folder's files and sub-folders and update the state\r\n        setFiles([...filesInFolder, ...foldersInFolder]);\r\n      } else {\r\n        // If the clicked item is a file, fetch its content\r\n        const content = await getFileContent(filePath);\r\n        setSelectedFile(content);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching file/folder content:', error);\r\n      setSelectedFile(null); // Set selectedFile to null in case of error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\r\n\r\n  return (\r\n    <div className=\"splitContainer\">\r\n      <Split\r\n        className=\"container\"\r\n        sizes={splitSizes}\r\n        minSize={0}\r\n        expandToMin={false}\r\n        gutterSize={5}\r\n        gutterAlign=\"center\"\r\n        snapOffset={30}\r\n        dragInterval={1}\r\n        direction=\"horizontal\"\r\n        cursor=\"col-resize\"\r\n      >\r\n        <Files files={files} onFileClick={handleFileClick} />\r\n        {selectedFile !== null ? (\r\n          <CodeEditor content={selectedFile} />\r\n        ) : (\r\n          <div className=\"codeEditor\">Select a file to view its content</div>\r\n        )}\r\n      </Split>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitContainer;\r\n","C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\split_container\\Files.jsx",["128"],[],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\videoCall\\VideoCall.jsx",["129"],["130"],"C:\\Users\\Paul\\Desktop\\new folder\\reactconnect\\reactconnect\\src\\components\\videoCall\\Video.js",[],["131"],{"ruleId":"132","severity":1,"message":"133","line":12,"column":7,"nodeType":"134","messageId":"135","endLine":12,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":36,"column":19,"nodeType":"138","endLine":36,"endColumn":150},{"ruleId":"132","severity":1,"message":"139","line":5,"column":11,"nodeType":"134","messageId":"135","endLine":5,"endColumn":20},{"ruleId":"132","severity":1,"message":"140","line":5,"column":39,"nodeType":"134","messageId":"135","endLine":5,"endColumn":44},{"ruleId":"132","severity":1,"message":"141","line":5,"column":71,"nodeType":"134","messageId":"135","endLine":5,"endColumn":77},{"ruleId":"142","severity":1,"message":"143","line":13,"column":6,"nodeType":"144","endLine":13,"endColumn":8,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"146","line":10,"column":22,"nodeType":"134","messageId":"135","endLine":10,"endColumn":35},{"ruleId":"132","severity":1,"message":"140","line":55,"column":39,"nodeType":"134","messageId":"135","endLine":55,"endColumn":44},{"ruleId":"132","severity":1,"message":"147","line":33,"column":10,"nodeType":"134","messageId":"135","endLine":33,"endColumn":21},{"ruleId":"132","severity":1,"message":"148","line":33,"column":23,"nodeType":"134","messageId":"135","endLine":33,"endColumn":37},{"ruleId":"142","severity":1,"message":"149","line":44,"column":6,"nodeType":"144","endLine":44,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":218,"column":20,"nodeType":"153","messageId":"154","endLine":218,"endColumn":22},{"ruleId":"142","severity":1,"message":"155","line":89,"column":6,"nodeType":"144","endLine":89,"endColumn":8,"suggestions":"156","suppressions":"157"},{"ruleId":"142","severity":1,"message":"158","line":11,"column":8,"nodeType":"144","endLine":11,"endColumn":10,"suggestions":"159","suppressions":"160"},"no-unused-vars","'rootElement' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateRandomColors'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'setChallenges' is assigned a value but never used.","'fileContent' is assigned a value but never used.","'setFileContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFileContent'. Either include it or remove the dependency array.",["162"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'connectToSocketAndWebcamStream'. Either include it or remove the dependency array.",["163"],["164"],"React Hook useEffect has a missing dependency: 'props.peer.peer'. Either include it or remove the dependency array.",["165"],["166"],{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"kind":"173","justification":"174"},{"desc":"175","fix":"176"},{"kind":"173","justification":"174"},"Update the dependencies array to be: [generateRandomColors]",{"range":"177","text":"178"},"Update the dependencies array to be: [fetchFileContent]",{"range":"179","text":"180"},"Update the dependencies array to be: [connectToSocketAndWebcamStream]",{"range":"181","text":"182"},"directive","","Update the dependencies array to be: [props.peer.peer]",{"range":"183","text":"184"},[415,417],"[generateRandomColors]",[1446,1448],"[fetchFileContent]",[3807,3809],"[connectToSocketAndWebcamStream]",[284,286],"[props.peer.peer]"]