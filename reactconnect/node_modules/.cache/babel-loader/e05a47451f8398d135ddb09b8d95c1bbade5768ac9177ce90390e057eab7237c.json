{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\components\\\\questionlist\\\\NewQuestionList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './questionlist.css';\nimport NavBar from '../navbar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewQuestionsList = () => {\n  _s();\n  const [issues, setIssues] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const handleCommentChange = event => {\n    setCommentText(event.target.value);\n  };\n  const handleCommentSubmit = async (event, issueNumber) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(`https://api.github.com/repos/0Armaan025/tiktok_clone/issues/${issueNumber}/comments`, {\n        body: commentText\n      }, {\n        headers: {\n          Authorization: `token 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`\n        }\n      });\n\n      // Refresh the issue's comments after successful submission\n      const updatedIssues = [...issues];\n      const issueToUpdate = updatedIssues.find(issue => issue.number === issueNumber);\n      if (issueToUpdate) {\n        issueToUpdate.comments.push(response.data);\n        setIssues(updatedIssues);\n      }\n\n      // Clear the comment input field\n      setCommentText('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchIssues = async () => {\n      try {\n        const response = await axios.get('https://api.github.com/repos/0Armaan025/tiktok_clone/issues', {\n          headers: {\n            Authorization: `token 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`\n          }\n        });\n        const issuesWithComments = await Promise.all(response.data.map(async issue => {\n          const commentsResponse = await axios.get(issue.comments_url, {\n            headers: {\n              Authorization: `token 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`\n            }\n          });\n          return {\n            ...issue,\n            comments: commentsResponse.data,\n            showComments: false\n          };\n        }));\n        setIssues(issuesWithComments);\n      } catch (error) {\n        console.error('Error fetching issues:', error);\n      }\n    };\n    fetchIssues();\n  }, []);\n  const toggleComments = issueId => {\n    setIssues(prevIssues => prevIssues.map(issue => issue.id === issueId ? {\n      ...issue,\n      showComments: !issue.showComments\n    } : issue));\n  };\n  const handleCommentDelete = async (issueNumber, commentId) => {\n    try {\n      await axios.delete(`https://api.github.com/repos/0Armaan025/tiktok_clone/issues/comments/${commentId}`, {\n        headers: {\n          Authorization: `token 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`\n        }\n      });\n\n      // Refresh the issue's comments after successful deletion\n      const updatedIssues = issues.map(issue => {\n        if (issue.number === issueNumber) {\n          return {\n            ...issue,\n            comments: issue.comments.filter(comment => comment.id !== commentId)\n          };\n        }\n        return issue;\n      });\n      setIssues(updatedIssues);\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"github-issues-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"githubIssuesHeading\",\n        children: \"GitHub Issues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), issues.map(issue => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"issue\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => toggleComments(issue.id),\n          className: \"issue-title\",\n          children: [issue.title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: issue.showComments ? '▲' : '▼'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), issue.showComments && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"comments-list\",\n          children: issue.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), comment.user.login === '0Armaan025' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCommentDelete(issue.number, comment.id),\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => handleCommentSubmit(event, issue.number),\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: commentText,\n            onChange: handleCommentChange,\n            placeholder: \"Write your comment...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, issue.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(NewQuestionsList, \"sdCGLzuGmaMi+7A4EE5pMvaJwvQ=\");\n_c = NewQuestionsList;\nexport default NewQuestionsList;\nvar _c;\n$RefreshReg$(_c, \"NewQuestionsList\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","NewQuestionsList","_s","issues","setIssues","commentText","setCommentText","handleCommentChange","event","target","value","handleCommentSubmit","issueNumber","preventDefault","response","post","body","headers","Authorization","updatedIssues","issueToUpdate","find","issue","number","comments","push","data","error","console","fetchIssues","get","issuesWithComments","Promise","all","map","commentsResponse","comments_url","showComments","toggleComments","issueId","prevIssues","id","handleCommentDelete","commentId","delete","filter","comment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","title","user","login","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/components/questionlist/NewQuestionList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './questionlist.css';\r\nimport NavBar from '../navbar/Navbar';\r\n\r\nconst NewQuestionsList = () => {\r\n  const [issues, setIssues] = useState([]);\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  const handleCommentChange = (event) => {\r\n    setCommentText(event.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async (event, issueNumber) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `https://api.github.com/repos/0Armaan025/tiktok_clone/issues/${issueNumber}/comments`,\r\n        {\r\n          body: commentText,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `token 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`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Refresh the issue's comments after successful submission\r\n      const updatedIssues = [...issues];\r\n      const issueToUpdate = updatedIssues.find((issue) => issue.number === issueNumber);\r\n      if (issueToUpdate) {\r\n        issueToUpdate.comments.push(response.data);\r\n        setIssues(updatedIssues);\r\n      }\r\n\r\n      // Clear the comment input field\r\n      setCommentText('');\r\n    } catch (error) {\r\n      console.error('Error posting comment:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchIssues = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          'https://api.github.com/repos/0Armaan025/tiktok_clone/issues',\r\n          {\r\n            headers: {\r\n              Authorization: `token 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`,\r\n            },\r\n          }\r\n        );\r\n\r\n        const issuesWithComments = await Promise.all(\r\n          response.data.map(async (issue) => {\r\n            const commentsResponse = await axios.get(\r\n              issue.comments_url,\r\n              {\r\n                headers: {\r\n                  Authorization: `token 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`,\r\n                },\r\n              }\r\n            );\r\n            return {\r\n              ...issue,\r\n              comments: commentsResponse.data,\r\n              showComments: false,\r\n            };\r\n          })\r\n        );\r\n\r\n        setIssues(issuesWithComments);\r\n      } catch (error) {\r\n        console.error('Error fetching issues:', error);\r\n      }\r\n    };\r\n\r\n    fetchIssues();\r\n  }, []);\r\n\r\n  const toggleComments = (issueId) => {\r\n    setIssues((prevIssues) =>\r\n      prevIssues.map((issue) =>\r\n        issue.id === issueId ? { ...issue, showComments: !issue.showComments } : issue\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCommentDelete = async (issueNumber, commentId) => {\r\n    try {\r\n      await axios.delete(\r\n        `https://api.github.com/repos/0Armaan025/tiktok_clone/issues/comments/${commentId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `token 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`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Refresh the issue's comments after successful deletion\r\n      const updatedIssues = issues.map((issue) => {\r\n        if (issue.number === issueNumber) {\r\n          return {\r\n            ...issue,\r\n            comments: issue.comments.filter((comment) => comment.id !== commentId),\r\n          };\r\n        }\r\n        return issue;\r\n      });\r\n\r\n      setIssues(updatedIssues);\r\n    } catch (error) {\r\n      console.error('Error deleting comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBar/>\r\n    <div className=\"github-issues-list\">\r\n        \r\n        <br/>\r\n      <h1 className='githubIssuesHeading'>GitHub Issues</h1>\r\n      {issues.map((issue) => (\r\n        <div key={issue.id} className=\"issue\">\r\n          <h2 onClick={() => toggleComments(issue.id)} className=\"issue-title\">\r\n            {issue.title} <span>{issue.showComments ? '▲' : '▼'}</span>\r\n          </h2>\r\n          {issue.showComments && (\r\n            <ul className=\"comments-list\">\r\n              {issue.comments.map((comment) => (\r\n                <li key={comment.id} className=\"comment\">\r\n                  <span>{comment.body}</span>\r\n                  {comment.user.login === '0Armaan025' && (\r\n                    <button\r\n                      onClick={() => handleCommentDelete(issue.number, comment.id)}\r\n                      className=\"delete-button\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n          <form onSubmit={(event) => handleCommentSubmit(event, issue.number)} className=\"comment-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={commentText}\r\n              onChange={handleCommentChange}\r\n              placeholder=\"Write your comment...\"\r\n            />\r\n            <button type=\"submit\">Submit Comment</button>\r\n          </form>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewQuestionsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}