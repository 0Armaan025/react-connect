{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\components\\\\split_container\\\\Files.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\"; // Replace \"path/to/your/file\" with the actual path to the file containing the getFileContent function.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Files = () => {\n  _s();\n  const [fileContent, setFileContent] = useState(null);\n  const fetchFileContent = async () => {\n    try {\n      const filePath = 'lib/features/about_parko/screens/about_screen.dart';\n      const content = await getFileContent(filePath);\n      setFileContent(content);\n    } catch (error) {\n      console.error('Error fetching file content:', error);\n    }\n  };\n  useEffect(() => {\n    fetchFileContent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Content:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Files, \"a9jURcFZnM2ahW0foU1KCxDEHGQ=\");\n_c = Files;\nexport default Files;\nvar _c;\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Files","_s","fileContent","setFileContent","fetchFileContent","filePath","content","getFileContent","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/components/split_container/Files.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";  // Replace \"path/to/your/file\" with the actual path to the file containing the getFileContent function.\r\n\r\nconst Files = () => {\r\n  const [fileContent, setFileContent] = useState(null);\r\n\r\n\r\n\r\n  const fetchFileContent = async () => {\r\n    try {\r\n      const filePath = 'lib/features/about_parko/screens/about_screen.dart';\r\n      const content = await getFileContent(filePath);\r\n      setFileContent(content);\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFileContent();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>File Content:</h1>\r\n      <pre>{fileContent}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAIpD,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,oDAAoD;MACrE,MAAMC,OAAO,GAAG,MAAMC,cAAc,CAACF,QAAQ,CAAC;MAC9CF,cAAc,CAACG,OAAO,CAAC;IACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdO,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAAW,QAAA,EAAMR;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACb,EAAA,CAzBID,KAAK;AAAAe,EAAA,GAALf,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}