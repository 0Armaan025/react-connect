{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\components\\\\split_container\\\\SplitContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Split from \"react-split\";\nimport './splitcontainer.css';\nimport CodeEditor from \"../../screens/Editor/Editor\";\nimport Files from \"./Files\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SplitContainer = ({\n  param,\n  isSidebarCollapsed\n}) => {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n\n  // githubApi.js\n\n  const getFileContent = async filePath => {\n    const owner = 'bishalbera';\n    const repo = 'Parko';\n    const branch = 'master';\n    const accessToken = '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';\n    const url = `https://api.github.com/repos/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\n    const headers = {\n      'Authorization': `token ${accessToken}`\n    };\n    const response = await fetch(url, {\n      headers\n    });\n    if (!response.ok) {\n      throw new Error('Error fetching file content');\n    }\n    const fileData = await response.json();\n    if (fileData.encoding === 'base64' && fileData.type === 'file') {\n      return atob(fileData.content);\n    } else {\n      throw new Error('Invalid file format');\n    }\n  };\n  const getFiles = async () => {\n    try {\n      const filePath = 'lib/features/about_parko/screens/about_screen.dart';\n      const content = await getFileContent(filePath);\n      setFileContent(content);\n    } catch (error) {\n      console.error('Error fetching file content:', error);\n    }\n  };\n  useEffect(() => {\n    getFiles();\n  }, []);\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splitContainer\",\n      children: /*#__PURE__*/_jsxDEV(Split, {\n        className: \"container\",\n        sizes: splitSizes,\n        minSize: 0,\n        expandToMin: false,\n        gutterSize: 5,\n        gutterAlign: \"center\",\n        snapOffset: 30,\n        dragInterval: 1,\n        direction: \"horizontal\",\n        cursor: \"col-resize\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files\",\n          children: /*#__PURE__*/_jsxDEV(Files, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_s(SplitContainer, \"Rd7QQbOAytSZtqZeXM26gadO6JE=\");\n_c = SplitContainer;\nexport default SplitContainer;\nvar _c;\n$RefreshReg$(_c, \"SplitContainer\");","map":{"version":3,"names":["React","useState","useEffect","Split","CodeEditor","Files","jsxDEV","_jsxDEV","Fragment","_Fragment","SplitContainer","param","isSidebarCollapsed","_s","fileContent","setFileContent","getFileContent","filePath","owner","repo","branch","accessToken","url","headers","response","fetch","ok","Error","fileData","json","encoding","type","atob","content","getFiles","error","console","splitSizes","children","className","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/components/split_container/SplitContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Split from \"react-split\";\r\nimport './splitcontainer.css';\r\nimport CodeEditor from \"../../screens/Editor/Editor\";\r\nimport Files from \"./Files\";\r\n\r\n\r\nconst SplitContainer = ({ param, isSidebarCollapsed }) => {\r\n  const [fileContent, setFileContent] = useState(\"\");\r\n  \r\n    // githubApi.js\r\n\r\nconst getFileContent = async (filePath) => {\r\n    const owner = 'bishalbera';\r\n    const repo = 'Parko';\r\n    const branch = 'master';\r\n    const accessToken = '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';\r\n  \r\n    const url = `https://api.github.com/repos/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\r\n    const headers = { 'Authorization': `token ${accessToken}` };\r\n  \r\n    const response = await fetch(url, { headers });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error('Error fetching file content');\r\n    }\r\n  \r\n    const fileData = await response.json();\r\n  \r\n    if (fileData.encoding === 'base64' && fileData.type === 'file') {\r\n      return atob(fileData.content);\r\n    } else {\r\n      throw new Error('Invalid file format');\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const getFiles = async () => {\r\n    try {\r\n      const filePath = 'lib/features/about_parko/screens/about_screen.dart';\r\n      const content = await getFileContent(filePath);\r\n      setFileContent(content);\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n  <div className=\"splitContainer\">\r\n\r\n      <Split\r\n        className=\"container\"\r\n        sizes={splitSizes}\r\n        minSize={0}\r\n        expandToMin={false}\r\n        gutterSize={5}\r\n        gutterAlign=\"center\"\r\n        snapOffset={30}\r\n        dragInterval={1}\r\n        direction=\"horizontal\"\r\n        cursor=\"col-resize\"\r\n      >\r\n       \r\n\r\n        <div className=\"files\">\r\n            <Files />\r\n        </div>\r\n\r\n       \r\n      </Split>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SplitContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}