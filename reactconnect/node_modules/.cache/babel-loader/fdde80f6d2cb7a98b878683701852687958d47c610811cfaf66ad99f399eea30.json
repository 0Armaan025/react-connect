{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\components\\\\split_container\\\\SplitContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Split from \"react-split\";\nimport './splitcontainer.css';\nimport axios from \"axios\";\nimport CodeEditor from \"../../screens/Editor/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Files = ({\n  files,\n  onFileClick\n}) => {\n  const handleFileClick = filePath => {\n    onFileClick(filePath);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          if (file.type === 'file') {\n            handleFileClick(file.path);\n          } else if (file.type === 'dir') {\n            // Fetch the sub-files when a folder is clicked\n            fetchSubFiles(file.path);\n          }\n        },\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Files;\nconst SplitContainer = ({\n  isSidebarCollapsed\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const fetchFiles = async () => {\n    try {\n      const owner = 'bishalbera';\n      const repo = 'Parko';\n      const branch = 'master';\n      const accessToken = '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';\n      const url = `https://api.github.com/repos/${owner}/${repo}/contents?ref=${branch}`;\n      const headers = {\n        'Authorization': `token ${accessToken}`\n      };\n      const response = await fetch(url, {\n        headers\n      });\n      if (!response.ok) {\n        throw new Error('Error fetching file list');\n      }\n      const filesData = await response.json();\n      // Filter out folders from the files data\n      const filteredFiles = filesData.filter(file => file.type === 'file');\n      setFiles(filteredFiles);\n    } catch (error) {\n      console.error('Error fetching file list:', error);\n    }\n  };\n  const handleFileClick = async filePath => {\n    try {\n      const contentResponse = await axios.get(filePath);\n      setSelectedFile(contentResponse.data);\n    } catch (error) {\n      console.error('Error fetching file content:', error);\n      setSelectedFile(null); // Set selectedFile to null in case of error\n    }\n  };\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"splitContainer\",\n    children: /*#__PURE__*/_jsxDEV(Split, {\n      className: \"container\",\n      sizes: splitSizes,\n      minSize: 0,\n      expandToMin: false,\n      gutterSize: 5,\n      gutterAlign: \"center\",\n      snapOffset: 30,\n      dragInterval: 1,\n      direction: \"horizontal\",\n      cursor: \"col-resize\",\n      children: [/*#__PURE__*/_jsxDEV(Files, {\n        files: files,\n        onFileClick: handleFileClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), selectedFile !== null ? /*#__PURE__*/_jsxDEV(CodeEditor, {\n        content: selectedFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"codeEditor\",\n        children: \"Select a file to view its content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitContainer, \"tOQ9b1DtUADMqDwW1afLWDOagMI=\");\n_c2 = SplitContainer;\nexport default SplitContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Files\");\n$RefreshReg$(_c2, \"SplitContainer\");","map":{"version":3,"names":["React","useState","useEffect","Split","axios","CodeEditor","jsxDEV","_jsxDEV","Files","files","onFileClick","handleFileClick","filePath","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","onClick","type","path","fetchSubFiles","name","_c","SplitContainer","isSidebarCollapsed","_s","setFiles","selectedFile","setSelectedFile","fetchFiles","owner","repo","branch","accessToken","url","headers","response","fetch","ok","Error","filesData","json","filteredFiles","filter","error","console","contentResponse","get","data","splitSizes","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","content","_c2","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/components/split_container/SplitContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Split from \"react-split\";\r\nimport './splitcontainer.css';\r\nimport axios from \"axios\";\r\nimport CodeEditor from \"../../screens/Editor/Editor\";\r\n\r\nconst Files = ({ files, onFileClick }) => {\r\n  const handleFileClick = (filePath) => {\r\n    onFileClick(filePath);\r\n  };\r\n\r\n  return (\r\n    <div className=\"files\">\r\n      <h2>Files:</h2>\r\n      <ul>\r\n        {files.map((file, index) => (\r\n          <li\r\n            key={index}\r\n            onClick={() => {\r\n              if (file.type === 'file') {\r\n                handleFileClick(file.path);\r\n              } else if (file.type === 'dir') {\r\n                // Fetch the sub-files when a folder is clicked\r\n                fetchSubFiles(file.path);\r\n              }\r\n            }}\r\n          >\r\n            {file.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SplitContainer = ({ isSidebarCollapsed }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const owner = 'bishalbera';\r\n      const repo = 'Parko';\r\n      const branch = 'master';\r\n      const accessToken = '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';\r\n      const url = `https://api.github.com/repos/${owner}/${repo}/contents?ref=${branch}`;\r\n      const headers = { 'Authorization': `token ${accessToken}` };\r\n      const response = await fetch(url, { headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error fetching file list');\r\n      }\r\n\r\n      const filesData = await response.json();\r\n      // Filter out folders from the files data\r\n      const filteredFiles = filesData.filter(file => file.type === 'file');\r\n      setFiles(filteredFiles);\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  \r\n\r\n  const handleFileClick = async (filePath) => {\r\n    try {\r\n      const contentResponse = await axios.get(filePath);\r\n      setSelectedFile(contentResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n      setSelectedFile(null); // Set selectedFile to null in case of error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\r\n\r\n  return (\r\n    <div className=\"splitContainer\">\r\n      <Split\r\n        className=\"container\"\r\n        sizes={splitSizes}\r\n        minSize={0}\r\n        expandToMin={false}\r\n        gutterSize={5}\r\n        gutterAlign=\"center\"\r\n        snapOffset={30}\r\n        dragInterval={1}\r\n        direction=\"horizontal\"\r\n        cursor=\"col-resize\"\r\n      >\r\n        <Files files={files} onFileClick={handleFileClick} />\r\n        {selectedFile !== null ? (\r\n          <CodeEditor content={selectedFile} />\r\n        ) : (\r\n          <div className=\"codeEditor\">Select a file to view its content</div>\r\n        )}\r\n      </Split>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}