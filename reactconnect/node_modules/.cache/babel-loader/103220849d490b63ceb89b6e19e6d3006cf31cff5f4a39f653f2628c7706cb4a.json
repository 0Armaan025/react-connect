{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\components\\\\split_container\\\\SplitContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Split from \"react-split\";\nimport './splitcontainer.css';\nimport axios from \"axios\";\nimport CodeEditor from \"../../screens/Editor/Editor\";\nimport NavBar from \"../navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Files = ({\n  files,\n  onFileClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => file.type === 'dir' ? onFileClick(file.path) : onFileClick(file.path),\n          className: file.type === 'dir' ? 'folder' : '',\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Files;\nconst SplitContainer = ({\n  isSidebarCollapsed\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const getFileContent = async filePath => {\n    const owner = 'bishalbera';\n    const repo = 'Parko';\n    const branch = 'master';\n    const accessToken = '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';\n    const url = `https://api.github.com/repos/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\n    const headers = {\n      'Authorization': `token ${accessToken}`,\n      'Accept': 'application/vnd.github.v3.raw' // Request raw content directly\n    };\n\n    try {\n      const response = await axios.get(url, {\n        headers\n      });\n\n      // 'data' will contain the content of the file\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching file content:', error);\n      throw new Error('Error fetching file content');\n    }\n  };\n  const fetchFiles = async () => {\n    try {\n      const owner = 'bishalbera';\n      const repo = 'Parko';\n      const branch = 'master';\n      const accessToken = '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';\n      const url = `https://api.github.com/repos/${owner}/${repo}/contents?ref=${branch}`;\n      const headers = {\n        'Authorization': `token ${accessToken}`\n      };\n      const response = await fetch(url, {\n        headers\n      });\n      if (!response.ok) {\n        throw new Error('Error fetching file list');\n      }\n      const filesData = await response.json();\n      // Filter out files and folders separately\n      const files = filesData.filter(item => item.type === 'file');\n      const folders = filesData.filter(item => item.type === 'dir');\n      setFiles([...folders, ...files]); // Merge folders and files arrays\n    } catch (error) {\n      console.error('Error fetching file list:', error);\n    }\n  };\n  const handleFileClick = async filePath => {\n    try {\n      var _files$find;\n      if (((_files$find = files.find(file => file.path === filePath)) === null || _files$find === void 0 ? void 0 : _files$find.type) === 'dir') {\n        // If the clicked item is a folder, fetch its contents\n        const accessToken = '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';\n        const response = await axios.get(filePath, {\n          headers: {\n            'Authorization': `token ${accessToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Error fetching folder contents');\n        }\n        const folderContents = await response.data;\n        // Filter out files and folders separately\n        const filesInFolder = folderContents.filter(item => item.type === 'file');\n        const foldersInFolder = folderContents.filter(item => item.type === 'dir');\n\n        // Combine the current folder's files and sub-folders and update the state\n        setFiles([...filesInFolder, ...foldersInFolder]);\n      } else {\n        // If the clicked item is a file, fetch its content\n        const content = await getFileContent(filePath);\n        setSelectedFile(content);\n      }\n    } catch (error) {\n      console.error('Error fetching file/folder content:', error);\n      setSelectedFile(null); // Set selectedFile to null in case of error\n    }\n  };\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"splitContainer\",\n    children: /*#__PURE__*/_jsxDEV(Split, {\n      className: \"container\",\n      sizes: splitSizes,\n      minSize: 0,\n      expandToMin: false,\n      gutterSize: 5,\n      gutterAlign: \"center\",\n      snapOffset: 30,\n      dragInterval: 1,\n      direction: \"horizontal\",\n      cursor: \"col-resize\",\n      children: [/*#__PURE__*/_jsxDEV(Files, {\n        files: files,\n        onFileClick: handleFileClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), selectedFile !== null ? /*#__PURE__*/_jsxDEV(CodeEditor, {\n        content: selectedFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"codeEditor\",\n        children: \"Select a file to view its content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitContainer, \"SzrxqrOJbDvHyCvWB3XgWMMBHuw=\");\n_c2 = SplitContainer;\nexport default SplitContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Files\");\n$RefreshReg$(_c2, \"SplitContainer\");","map":{"version":3,"names":["React","useState","useEffect","Split","axios","CodeEditor","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Files","files","onFileClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","file","index","onClick","type","path","name","_c","SplitContainer","isSidebarCollapsed","_s","setFiles","selectedFile","setSelectedFile","fileContent","setFileContent","getFileContent","filePath","owner","repo","branch","accessToken","url","headers","response","get","data","error","console","Error","fetchFiles","fetch","ok","filesData","json","filter","item","folders","handleFileClick","_files$find","find","folderContents","filesInFolder","foldersInFolder","content","splitSizes","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","_c2","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/components/split_container/SplitContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Split from \"react-split\";\r\nimport './splitcontainer.css';\r\nimport axios from \"axios\";\r\nimport CodeEditor from \"../../screens/Editor/Editor\";\r\nimport NavBar from \"../navbar/Navbar\";\r\n\r\nconst Files = ({ files, onFileClick }) => {\r\n  return (\r\n    <>\r\n    <NavBar/>\r\n    <div className=\"files\">\r\n      <h2>Files:</h2>\r\n      <ul>\r\n        {files.map((file, index) => (\r\n          <li\r\n            key={index}\r\n            onClick={() => (file.type === 'dir' ? onFileClick(file.path) : onFileClick(file.path))}\r\n            className={file.type === 'dir' ? 'folder' : ''}\r\n          >\r\n            {file.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SplitContainer = ({ isSidebarCollapsed }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n\r\n  const getFileContent = async (filePath) => {\r\n    const owner = 'bishalbera';\r\n    const repo = 'Parko';\r\n    const branch = 'master';\r\n    const accessToken = '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';\r\n\r\n    const url = `https://api.github.com/repos/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\r\n    const headers = {\r\n      'Authorization': `token ${accessToken}`,\r\n      'Accept': 'application/vnd.github.v3.raw', // Request raw content directly\r\n    };\r\n\r\n    try {\r\n      const response = await axios.get(url, { headers });\r\n\r\n      // 'data' will contain the content of the file\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n      throw new Error('Error fetching file content');\r\n    }\r\n  };\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const owner = 'bishalbera';\r\n      const repo = 'Parko';\r\n      const branch = 'master';\r\n      const accessToken = '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';\r\n      const url = `https://api.github.com/repos/${owner}/${repo}/contents?ref=${branch}`;\r\n      const headers = { 'Authorization': `token ${accessToken}` };\r\n      const response = await fetch(url, { headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error fetching file list');\r\n      }\r\n\r\n      const filesData = await response.json();\r\n      // Filter out files and folders separately\r\n      const files = filesData.filter(item => item.type === 'file');\r\n      const folders = filesData.filter(item => item.type === 'dir');\r\n      setFiles([...folders, ...files]); // Merge folders and files arrays\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileClick = async (filePath) => {\r\n    try {\r\n      if (files.find(file => file.path === filePath)?.type === 'dir') {\r\n        // If the clicked item is a folder, fetch its contents\r\n        const accessToken = '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';\r\n        const response = await axios.get(filePath, { headers: { 'Authorization': `token ${accessToken}` } });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error fetching folder contents');\r\n        }\r\n\r\n        const folderContents = await response.data;\r\n        // Filter out files and folders separately\r\n        const filesInFolder = folderContents.filter(item => item.type === 'file');\r\n        const foldersInFolder = folderContents.filter(item => item.type === 'dir');\r\n\r\n        // Combine the current folder's files and sub-folders and update the state\r\n        setFiles([...filesInFolder, ...foldersInFolder]);\r\n      } else {\r\n        // If the clicked item is a file, fetch its content\r\n        const content = await getFileContent(filePath);\r\n        setSelectedFile(content);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching file/folder content:', error);\r\n      setSelectedFile(null); // Set selectedFile to null in case of error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\r\n\r\n  return (\r\n    <div className=\"splitContainer\">\r\n      <Split\r\n        className=\"container\"\r\n        sizes={splitSizes}\r\n        minSize={0}\r\n        expandToMin={false}\r\n        gutterSize={5}\r\n        gutterAlign=\"center\"\r\n        snapOffset={30}\r\n        dragInterval={1}\r\n        direction=\"horizontal\"\r\n        cursor=\"col-resize\"\r\n      >\r\n        <Files files={files} onFileClick={handleFileClick} />\r\n        {selectedFile !== null ? (\r\n          <CodeEditor content={selectedFile} />\r\n        ) : (\r\n          <div className=\"codeEditor\">Select a file to view its content</div>\r\n        )}\r\n      </Split>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}