{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\screens\\\\Editor\\\\Editor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\"; // Import the Socket.IO client library\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport 'prismjs/components/prism-clike';\nimport \"prismjs/components/prism-javascript\";\nimport axios from \"axios\";\nimport \"prismjs/themes/prism-okaidia.css\";\nimport \"./editor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\"); // Connect to the Socket.IO server\n\nconst CodeEditor = ({\n  userCode\n}) => {\n  _s();\n  const [code, setCode] = useState(\"\");\n\n  // Emit code changes to the backend when 'code' state changes\n  setCode();\n  const handleCodeChange = newCode => {\n    console.log(\"New code:\", newCode);\n    setCode(newCode);\n    socket.emit(\"codeChange\", newCode);\n    socket.on(\"codeChange\", newCode => {\n      setCode(newCode);\n    });\n  };\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to the server!\");\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from the server!\");\n    });\n\n    // socket.emit(\"codeChange\", code);\n    socket.on(\"codeChange\", newCode => {\n      setCode(newCode);\n    });\n  }, [code]);\n  const formatCode = () => {\n    axios.post(\"http://localhost:3001/api/formatCode\", {\n      code\n    }).then(response => {\n      console.log(\"Server response:\", response.data); // Add this line to check the response data\n      const formattedCode = response.data;\n      console.log(\"Formatted code:\", formattedCode);\n      setCode(formattedCode); // Add this line to check the formatted code\n    }).catch(error => {\n      console.error(\"Error formatting code:\", error);\n    });\n  };\n  const handleSaveCodeVersion = () => {\n    // Make a POST request to save the code version in the backend\n    axios.post(\"http://localhost:3001/api/saveCodeVersion\", {\n      code\n    }).then(response => {\n      console.log(response.data.message); // The server response message\n      setCode(code);\n    }).catch(error => {\n      console.error(\"Error saving code version:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_editor_area\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        value: code,\n        onValueChange: code => handleCodeChange(code),\n        highlight: code => highlight(code, languages.js),\n        padding: 10,\n        style: {\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveCodeVersion,\n      className: \"editorBtn\",\n      children: \"Save Code Version\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: formatCode,\n      className: \"editorBtn\",\n      children: \"Format Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"FE42fR7c//TxniZM6R7Q0xMAMis=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","io","Editor","highlight","languages","axios","jsxDEV","_jsxDEV","socket","CodeEditor","userCode","_s","code","setCode","handleCodeChange","newCode","console","log","emit","on","formatCode","post","then","response","data","formattedCode","catch","error","handleSaveCodeVersion","message","children","className","value","onValueChange","js","padding","style","fontFamily","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/screens/Editor/Editor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\"; // Import the Socket.IO client library\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport 'prismjs/components/prism-clike';\r\nimport \"prismjs/components/prism-javascript\";\r\nimport axios from \"axios\";\r\nimport \"prismjs/themes/prism-okaidia.css\";\r\nimport \"./editor.css\";\r\nconst socket = io(\"http://localhost:3001\"); // Connect to the Socket.IO server\r\n\r\nconst CodeEditor = ({userCode}) => {\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  // Emit code changes to the backend when 'code' state changes\r\n  setCode()\r\n\r\n  const handleCodeChange = (newCode) => {\r\n    console.log(\"New code:\", newCode);\r\n    setCode(newCode);\r\n    socket.emit(\"codeChange\", newCode);\r\n    socket.on(\"codeChange\", (newCode) => {\r\n      setCode(newCode);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"Connected to the server!\");\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"Disconnected from the server!\");\r\n    });\r\n\r\n    // socket.emit(\"codeChange\", code);\r\n    socket.on(\"codeChange\", (newCode) => {\r\n      setCode(newCode);\r\n    });\r\n  }, [code]);\r\n\r\n  const formatCode = () => {\r\n    axios\r\n      .post(\"http://localhost:3001/api/formatCode\", { code })\r\n      .then((response) => {\r\n        console.log(\"Server response:\", response.data); // Add this line to check the response data\r\n        const formattedCode = response.data;\r\n        console.log(\"Formatted code:\", formattedCode);\r\n        setCode(formattedCode); // Add this line to check the formatted code\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error formatting code:\", error);\r\n      });\r\n  };\r\n\r\n  const handleSaveCodeVersion = () => {\r\n    // Make a POST request to save the code version in the backend\r\n    axios\r\n      .post(\"http://localhost:3001/api/saveCodeVersion\", { code })\r\n      .then((response) => {\r\n        console.log(response.data.message); // The server response message\r\n        setCode(code);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error saving code version:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container_editor_area\">\r\n        <Editor\r\n          value={code}\r\n          onValueChange={(code) => handleCodeChange(code)}\r\n          highlight={(code) => highlight(code, languages.js)}\r\n          padding={10}\r\n          style={{\r\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n            fontSize: 12,\r\n          }}\r\n        />\r\n      </div>\r\n      <button onClick={handleSaveCodeVersion} className=\"editorBtn\">Save Code Version</button>\r\n      <button onClick={formatCode} className=\"editorBtn\">Format Code</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}