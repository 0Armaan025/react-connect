{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\new folder\\\\reactconnect\\\\reactconnect\\\\src\\\\components\\\\split_container\\\\SplitContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Split from \"react-split\";\nimport './splitcontainer.css';\nimport axios from \"axios\";\nimport CodeEditor from \"../../screens/Editor/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Files = ({\n  files,\n  onFileClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onFileClick(file.path),\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Files;\nconst SplitContainer = ({\n  isSidebarCollapsed\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const getFileContent = async filePath => {\n    const url = `https://api.github.com/repos/bishalbera/Parko/contents/${filePath}?ref=master`;\n    const headers = {\n      'Authorization': 'token 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',\n      'Accept': 'application/vnd.github.v3.raw' // Request raw content directly\n    };\n\n    try {\n      const response = await axios.get(url, {\n        headers\n      });\n\n      // 'data' will contain the content of the file\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching file content:', error);\n      throw new Error('Error fetching file content');\n    }\n  };\n  const fetchFiles = async () => {\n    const url = 'https://api.github.com/repos/bishalbera/Parko/git/trees/master?recursive=1';\n    const headers = {\n      'Authorization': 'token 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'\n    };\n    try {\n      const response = await fetch(url, {\n        headers\n      });\n      if (!response.ok) {\n        throw new Error('Error fetching file list');\n      }\n      const data = await response.json();\n      const filesData = data.tree.filter(item => item.type === 'blob');\n      setFiles(filesData);\n    } catch (error) {\n      console.error('Error fetching file list:', error);\n    }\n  };\n  const handleFileClick = async filePath => {\n    try {\n      const content = await getFileContent(filePath);\n      setSelectedFile(content);\n    } catch (error) {\n      console.error('Error fetching file content:', error);\n      setSelectedFile(null); // Set selectedFile to null in case of error\n    }\n  };\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"splitContainer\",\n    children: /*#__PURE__*/_jsxDEV(Split, {\n      className: \"container\",\n      sizes: splitSizes,\n      minSize: 0,\n      expandToMin: false,\n      gutterSize: 5,\n      gutterAlign: \"center\",\n      snapOffset: 30,\n      dragInterval: 1,\n      direction: \"horizontal\",\n      cursor: \"col-resize\",\n      children: [/*#__PURE__*/_jsxDEV(Files, {\n        files: files,\n        onFileClick: handleFileClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), selectedFile !== null ? /*#__PURE__*/_jsxDEV(CodeEditor, {\n        content: selectedFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"codeEditor\",\n        children: \"Select a file to view its content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitContainer, \"SzrxqrOJbDvHyCvWB3XgWMMBHuw=\");\n_c2 = SplitContainer;\nexport default SplitContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Files\");\n$RefreshReg$(_c2, \"SplitContainer\");","map":{"version":3,"names":["React","useState","useEffect","Split","axios","CodeEditor","jsxDEV","_jsxDEV","Files","files","onFileClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","onClick","path","name","_c","SplitContainer","isSidebarCollapsed","_s","setFiles","selectedFile","setSelectedFile","fileContent","setFileContent","getFileContent","filePath","url","headers","response","get","data","error","console","Error","fetchFiles","fetch","ok","json","filesData","tree","filter","item","type","handleFileClick","content","splitSizes","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","_c2","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/new folder/reactconnect/reactconnect/src/components/split_container/SplitContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Split from \"react-split\";\r\nimport './splitcontainer.css';\r\nimport axios from \"axios\";\r\nimport CodeEditor from \"../../screens/Editor/Editor\";\r\n\r\nconst Files = ({ files, onFileClick }) => {\r\n  return (\r\n    <div className=\"files\">\r\n      <h2>Files:</h2>\r\n      <ul>\r\n        {files.map((file, index) => (\r\n          <li key={index} onClick={() => onFileClick(file.path)}>\r\n            {file.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SplitContainer = ({ isSidebarCollapsed }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('')\r\n\r\n  const getFileContent = async (filePath) => {\r\n    const url = `https://api.github.com/repos/bishalbera/Parko/contents/${filePath}?ref=master`;\r\n    const headers = {\r\n      'Authorization': 'token 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',\r\n      'Accept': 'application/vnd.github.v3.raw', // Request raw content directly\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.get(url, { headers });\r\n  \r\n      // 'data' will contain the content of the file\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n      throw new Error('Error fetching file content');\r\n    }\r\n  };\r\n\r\n  const fetchFiles = async () => {\r\n    const url = 'https://api.github.com/repos/bishalbera/Parko/git/trees/master?recursive=1';\r\n    const headers = {\r\n      'Authorization': 'token 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'\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(url, { headers });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Error fetching file list');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      const filesData = data.tree.filter(item => item.type === 'blob');\r\n      setFiles(filesData);\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileClick = async (filePath) => {\r\n    try {\r\n      const content = await getFileContent(filePath);\r\n      setSelectedFile(content);\r\n    } catch (error) {\r\n      console.error('Error fetching file content:', error);\r\n      setSelectedFile(null); // Set selectedFile to null in case of error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const splitSizes = isSidebarCollapsed ? [0, 100] : [15, 85];\r\n\r\n  return (\r\n    <div className=\"splitContainer\">\r\n      <Split\r\n        className=\"container\"\r\n        sizes={splitSizes}\r\n        minSize={0}\r\n        expandToMin={false}\r\n        gutterSize={5}\r\n        gutterAlign=\"center\"\r\n        snapOffset={30}\r\n        dragInterval={1}\r\n        direction=\"horizontal\"\r\n        cursor=\"col-resize\"\r\n      >\r\n        <Files files={files} onFileClick={handleFileClick} />\r\n        {selectedFile !== null ? (\r\n          <CodeEditor content={selectedFile} />\r\n        ) : (\r\n          <div className=\"codeEditor\">Select a file to view its content</div>\r\n        )}\r\n      </Split>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}